{"version":3,"sources":["components/UserIndexItem.jsx","components/UserIndex.jsx","App.js","index.js"],"names":["UserIndexItem","users","toggleActive","active","generateTime","timeInMS","amPM","minutes","Math","floor","hours","map","user","className","onClick","e","id","xmlns","height","viewBox","width","fill","role","d","firstName","lastName","email","street","city","zip","phone","slice","parseInt","createdAt","toString","Date","lastLoggedIn","UserIndex","useState","setUsers","setActive","useEffect","fetchUsers","a","fetch","headers","Accept","response","json","data","src","alt","preventDefault","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6fb8bd9.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./UserIndexItem.css\";\n\nconst UserIndexItem = ({ users, toggleActive, active }) => {\n  const generateTime = (timeInMS) => {\n    let minutes = Math.floor((timeInMS / (1000 * 60)) % 60);\n    let hours = Math.floor((timeInMS / (1000 * 60 * 60)) % 24) % 12;\n    let amPM;\n\n    amPM = hours > 12 ? \"PM\" : \"AM\";\n    if (hours === 12) {\n      hours = 12;\n      amPM = \"PM\";\n    } else if (hours === 24) {\n      hours = 12;\n      amPM = \"AM\";\n    } else {\n      hours = hours < 10 ? \"0\" + (hours % 12) : hours % 12;\n    }\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n\n    return hours + \":\" + minutes + \" \" + amPM;\n  };\n\n  return (\n    <div>\n      {users.map((user) => {\n        return (\n          <div key={user.id} className=\"user-index-container\">\n            <button\n              onClick={(e) => toggleActive(e, user.id)}\n              key={user.id}\n              className=\"user-card\"\n            >\n              <div className=\"icon-details\">\n                <svg\n                  className=\"user-icon\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  height=\"24px\"\n                  viewBox=\"0 0 24 24\"\n                  width=\"24px\"\n                  fill={\n                    user.role === \"Administrator\"\n                      ? \"#2081C3\"\n                      : user.role === \"User\"\n                      ? \"#68AAAB\"\n                      : \"#7E7E7E\"\n                  }\n                >\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\n                </svg>\n                <div className=\"user-info\">\n                  <p className=\"user-name\">\n                    {user.firstName + \" \" + user.lastName}\n                  </p>\n                  <p className=\"user-role\" id={user.role}>\n                    {user.role}\n                  </p>\n                  <p className=\"user-email\">{user.email}</p>\n                </div>\n              </div>\n              {active === user.id ? (\n                <svg\n                  className=\"expand\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  height=\"24px\"\n                  viewBox=\"0 0 24 24\"\n                  width=\"24px\"\n                  fill=\"#000000\"\n                >\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\n                </svg>\n              ) : (\n                <svg\n                  className=\"expand\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  height=\"24px\"\n                  viewBox=\"0 0 24 24\"\n                  width=\"24px\"\n                  fill=\"#7E7E7E\"\n                >\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n                </svg>\n              )}\n            </button>\n            <div\n              className=\"user-content\"\n              id={active === user.id ? \"active\" : null}\n            >\n              <div className=\"spacer-div\"></div>\n              <div className=\"expand-details\">\n                <div>\n                  <p className=\"detail-header\">Address</p>\n                  <p className=\"detail-item\">\n                    {user.street + \", \" + user.city + \", \" + user.zip}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"detail-header\">Phone</p>\n                  <p className=\"detail-item\">\n                    {\"(\" +\n                      user.phone.slice(0, 3) +\n                      \") \" +\n                      user.phone.slice(3, 6) +\n                      \"-\" +\n                      user.phone.slice(6)}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"detail-header\">Created At</p>\n                  <p className=\"detail-item\">\n                    {parseInt(user.createdAt.slice(5, 7)).toString() +\n                      \"/\" +\n                      parseInt(user.createdAt.slice(9, 11)).toString() +\n                      \"/\" +\n                      parseInt(user.createdAt.slice(2, 4)).toString() +\n                      \" \" +\n                      generateTime(new Date(user.createdAt))}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"detail-header\">Last Logged In</p>\n                  <p className=\"detail-item\">\n                    {parseInt(user.lastLoggedIn.slice(5, 7)).toString() +\n                      \"/\" +\n                      parseInt(user.lastLoggedIn.slice(9, 11)).toString() +\n                      \"/\" +\n                      parseInt(user.lastLoggedIn.slice(2, 4)).toString() +\n                      \" \" +\n                      generateTime(new Date(user.lastLoggedIn))}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UserIndexItem;\n","import React, { useState, useEffect } from \"react\";\nimport UserIndexItem from \"./UserIndexItem\";\n\nimport \"./UserIndex.css\";\n\nconst UserIndex = () => {\n  const [users, setUsers] = useState([]);\n  const [active, setActive] = useState(null);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    const response = await fetch(\"./users.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const data = await response.json();\n    setUsers(data);\n  };\n\n  const toggleActive = (e, id) => {\n    e.preventDefault();\n    if (active === id) {\n      setActive(null);\n      return;\n    }\n    setActive(id);\n  };\n\n  return (\n    <div className=\"index-container\">\n      <div className=\"navbar-container\">\n        <div className=\"navbar\">\n          <div className=\"navbar-icon\">\n            <img\n              className=\"group-icon\"\n              src=\"./icons/group.svg\"\n              alt=\"group-icon\"\n            />\n          </div>\n          <p>USERS</p>\n        </div>\n      </div>\n      <UserIndexItem\n        users={users}\n        toggleActive={toggleActive}\n        active={active}\n      />\n    </div>\n  );\n};\n\nexport default UserIndex;\n","import \"./App.css\";\nimport UserIndex from \"./components/UserIndex\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <UserIndex />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}